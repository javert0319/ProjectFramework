apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        _test {
            matchingFallbacks = ['release', 'debug']
        }
        service_test {
            matchingFallbacks = ['release', 'debug']
        }
    }
    lintOptions {
        abortOnError false
    }
    repositories {
        flatDir {
            dirs project(':lib.frame').file('libs')
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation(rootProject.ext.dependencies.espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies.supportv7
    testImplementation rootProject.ext.dependencies.junit

    //retrofit
    //api rootProject.ext.dependencies.retrofit_converters
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies.retrofit_converter_gson
    api rootProject.ext.dependencies.retrofit_converter_scalars
    api rootProject.ext.dependencies.retrofit_adapter_rxjava2
    api rootProject.ext.dependencies.okhttp3
    api rootProject.ext.dependencies.okhttp3_logging_interceptor
    //api rootProject.ext.dependencies.filedownloader
    //rxjava
    api rootProject.ext.dependencies.rxjava2
    api rootProject.ext.dependencies.rxandroid2

    implementation rootProject.ext.dependencies.DropDownMenu
    api rootProject.ext.dependencies.BRVAH
    implementation project(':lib.frame')
}
